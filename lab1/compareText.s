SYSEXIT = 1EXIT_SUCCESS = 0SYSCALL = 0x80SYSWRITE = 4STDOUT = 1SYSREAD = 3STDIN = 0.global _start.databuf: .ascii "     "buf_len = . - buf.textmsg: .ascii "12345\n" msg_len = . - msgmsg1: .ascii "Ciagi rozne\n"msg1_len = . - msg1		# . adres miejsca w ktorej assembler aktualnie sie znajduje, od adresu tego miejsca odejmuje 					# adres poczatku ciagu znakowmsg2: .ascii "Ciagi te same\n"msg2_len = . - msg2_start:mov $SYSWRITE, %eaxmov $STDOUT, %ebxmov $msg, %ecxmov $msg_len, %edxint $SYSCALLmov $SYSREAD, %eaxmov $STDIN, %ebxmov $buf, %ecxmov $buf_len, %edxint $SYSCALLmov $0, %esimov $4, %edipetla:movb buf(, %esi, 1), %alcmp %al, msg(, %esi, 1)jne roznecmp %edi, %esije te_sameinc %esijmp petla				#skok bezwarunkowyrozne:mov $SYSWRITE, %eaxmov $STDOUT, %ebxmov $msg1, %ecxmov $msg1_len, %edxint $SYSCALLjmp koniecte_same:mov $SYSWRITE, %eaxmov $STDOUT, %ebxmov $msg2, %ecxmov $msg2_len, %edxint $SYSCALLkoniec:mov $SYSEXIT, %eaxmov $EXIT_SUCCESS, %ebxint $SYSCALL